import {useFormik} from 'formik';
import s from './form.module.scss';
import axios from 'axios';

interface FormValues {
    name: string;
    presence: string | null;
    alcoholPreferences: string[] | string;
    secondDay: string | null;
    music: string;
}

export const SendForm = () => {
    const formik = useFormik<FormValues>({
        initialValues: {
            name: '',
            presence: null,
            alcoholPreferences: [],
            secondDay: null,
            music: ''
        },
        onSubmit: (values: any) => {
            sendEmail(values)
        },
        validate: (values) => {
            const errors: Partial<FormValues> = {};

            if (!values.name) {
                errors.name = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
            }
            if (!values.secondDay) {
                errors.secondDay = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
            }
            if (!values.presence) {
                errors.presence = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
            }
            if (values.alcoholPreferences.length === 0) {
                errors.alcoholPreferences = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
            }

            return errors;
        },
    });

    async function sendEmail(values: FormValues) {
        const chatId = '-4185811054';
        const parseMode = 'Markdown';
        const message = `
   üéâ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Å—Ç—è—Ö* üéâ
   –ò–º–µ–Ω–∞ –≥–æ—Å—Ç–µ–π: *${values.name}*,
   üíÉ *–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ —Å–≤–∞–¥—å–±–µ*: *${values.presence === 'yes' ? '–î–∞' : '–ù–µ—Ç'}*,
   üìÖ *–í—Ç–æ—Ä–æ–π –¥–µ–Ω—å*: *${values.secondDay === 'yes' ? '–î–∞' : '–ù–µ—Ç'}*,
   üç∑ *–ê–ª–∫–æ–≥–æ–ª—å*: *${values.alcoholPreferences}*,
   üéµ *–ú—É–∑—ã–∫–∞*: *${values.music ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}*
   `
        try {
            const res = await axios.get(`https://api.telegram.org/bot6708801756:AAGbODKCspD-QUFJ9EVWjmwNfIBIRoNSpf0/sendMessage`, {
                params: {
                    chat_id: chatId,
                    parse_mode: parseMode,
                    text: message
                }
            })
            if (res.status) {
                console.log('ok')
            } else {
                console.log('ne ok')
            }
        } catch (e) {
            console.log('ne ok 2')
        }
    }

    return (
        <div className={s.wrapper} id="form">
            <div className={s.formContainer}>
                <div className={s.title}>
                    <div>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ–±—ã –≤—Å—ë –ø—Ä–æ—à–ª–æ –∏–¥–µ–∞–ª—å–Ω–æ, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –∞–Ω–∫–µ—Ç–µ:</div>
                    <p>–ü—Ä–æ—Å—å–±–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É –¥–æ 22.04.2024</p>
                </div>

                <form encType="multipart/form-data" method="POST" onSubmit={formik.handleSubmit}>
                    <div className={s.nameFormBlock}>
                        <div style={{marginBottom: '25px'}}>
                            {formik.touched.name && formik.errors.name && (
                                <div className={s.errorText}>{formik.errors.name}</div>
                            )}
                            {/*<TextField*/}
                            {/*    style={{width: '100%'}}*/}
                            {/*    variant="standard"*/}
                            {/*    className="form-control"*/}
                            {/*    id="name"*/}
                            {/*    placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤, –ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞"*/}
                            {/*    label="–ò–º—è –∏ –§–∞–º–∏–ª–∏—è –≥–æ—Å—Ç–µ–π"*/}
                            {/*    type="text"*/}
                            {/*    {...formik.getFieldProps('name')}*/}
                            {/*/>*/}
                        </div>
                    </div>

                    {/*    <div style={{marginBottom: '25px'}}>*/}
                    {/*        <FormControl>*/}
                    {/*            {formik.touched.presence && formik.errors.presence && (*/}
                    {/*                <div className={s.errorText}>{formik.errors.presence}</div>*/}
                    {/*            )}*/}
                    {/*            <FormLabel style={{fontWeight: '500', color: 'black'}} id="presence-label">–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ª–∏*/}
                    {/*                –í—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞*/}
                    {/*                —Å–≤–∞–¥—å–±–µ?</FormLabel>*/}
                    {/*            <RadioGroup*/}
                    {/*                aria-labelledby="presence-label"*/}
                    {/*                name="presence"*/}
                    {/*                value={formik.values.presence}*/}
                    {/*                onChange={formik.handleChange}*/}
                    {/*                onBlur={formik.handleBlur}*/}
                    {/*            >*/}
                    {/*                <FormControlLabel value="yes" control={<Radio color={'default'}/>}*/}
                    {/*                                  label="–î–∞, —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º!"/>*/}
                    {/*                <FormControlLabel value="no" control={<Radio color={'default'}/>}*/}
                    {/*                                  label="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –º–æ–≥—É"/>*/}
                    {/*            </RadioGroup>*/}
                    {/*        </FormControl>*/}
                    {/*    </div>*/}
                    {/*    /!*<FormControl style={{marginBottom: '25px'}}>*!/*/}
                    {/*    /!*    <FormLabel style={{fontWeight: '500', color: 'black'}} id="secondDay-label">–ë—É–¥–µ—Ç–µ –ª–∏ –í—ã –Ω–∞*!/*/}
                    {/*    /!*        –≤—Ç–æ—Ä–æ–º –¥–Ω–µ? (–Ω–∞—á–∞–ª–æ –≤ 12:00)</FormLabel>*!/*/}
                    {/*    /!*    <RadioGroup*!/*/}
                    {/*    /!*        aria-labelledby="secondDay-label"*!/*/}
                    {/*    /!*        name="secondDay"*!/*/}
                    {/*    /!*        value={formik.values.secondDay}*!/*/}
                    {/*    /!*        onChange={formik.handleChange}*!/*/}
                    {/*    /!*        onBlur={formik.handleBlur}*!/*/}
                    {/*    /!*    >*!/*/}
                    {/*    /!*        <FormControlLabel value="yes" control={<Radio color={'default'}/>} label="–î–∞"/>*!/*/}
                    {/*    /!*        <FormControlLabel value="no" control={<Radio color={'default'}/>} label="–ù–µ—Ç"/>*!/*/}
                    {/*    /!*    </RadioGroup>*!/*/}
                    {/*    /!*    {formik.touched.secondDay && formik.errors.secondDay && (*!/*/}
                    {/*    /!*        <div className={s.secondDay}>{formik.errors.secondDay}</div>*!/*/}
                    {/*    /!*    )}*!/*/}
                    {/*    /!*</FormControl>*!/*/}
                    {/*    /!*<div style={{marginBottom: '25px'}}>*!/*/}
                    {/*    /!*    {formik.touched.alcoholPreferences && formik.errors.alcoholPreferences && (*!/*/}
                    {/*    /!*        <div className={s.errorText}>{formik.errors.alcoholPreferences}</div>*!/*/}
                    {/*    /!*    )}*!/*/}
                    {/*    /!*    <FormControl component="fieldset">*!/*/}
                    {/*    /!*        <FormLabel style={{fontWeight: '500', color: 'black'}} component="legend">–ß—Ç–æ*!/*/}
                    {/*    /!*            –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –∏–∑ –∞–ª–∫–æ–≥–æ–ª—è?</FormLabel>*!/*/}
                    {/*    /!*        <FormGroup>*!/*/}
                    {/*    /!*            <FormControlLabel*!/*/}
                    {/*    /!*                control={<Checkbox color={'default'}/>}*!/*/}
                    {/*    /!*                label="–ö—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ –≤–∏–Ω–æ"*!/*/}
                    {/*    /!*                value="–ö—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ –≤–∏–Ω–æ"*!/*/}
                    {/*    /!*                onChange={(event: any) => {*!/*/}
                    {/*    /!*                    const isChecked = event.target.checked;*!/*/}
                    {/*    /!*                    if (typeof formik.values.alcoholPreferences !== 'string') {*!/*/}
                    {/*    /!*                        formik.setFieldValue(*!/*/}
                    {/*    /!*                            'alcoholPreferences',*!/*/}
                    {/*    /!*                            isChecked*!/*/}
                    {/*    /!*                                ? [...formik.values.alcoholPreferences, '–ö—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ –≤–∏–Ω–æ']*!/*/}
                    {/*    /!*                                : formik.values.alcoholPreferences.filter((preference) => preference !== '–ö—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ –≤–∏–Ω–æ')*!/*/}
                    {/*    /!*                        );*!/*/}
                    {/*    /!*                    }*!/*/}
                    {/*    /!*                }}*!/*/}
                    {/*    /!*            />*!/*/}
                    {/*    /!*            <FormControlLabel*!/*/}
                    {/*    /!*                control={<Checkbox color={'default'}/>}*!/*/}
                    {/*    /!*                label="–ö—Ä–∞—Å–Ω–æ–µ –ø–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ"*!/*/}
                    {/*    /!*                value="–ö—Ä–∞—Å–Ω–æ–µ –ø–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ"*!/*/}
                    {/*    /!*                onChange={(event: any) => {*!/*/}
                    {/*    /!*                    const isChecked = event.target.checked;*!/*/}
                    {/*    /!*                    if (typeof formik.values.alcoholPreferences !== 'string') {*!/*/}
                    {/*    /!*                        formik.setFieldValue(*!/*/}
                    {/*    /!*                            'alcoholPreferences',*!/*/}
                    {/*    /!*                            isChecked*!/*/}
                    {/*    /!*                                ? [...formik.values.alcoholPreferences, '–ö—Ä–∞—Å–Ω–æ–µ –ø–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ']*!/*/}
                    {/*    /!*                                : formik.values.alcoholPreferences.filter((preference) => preference !== '–ö—Ä–∞—Å–Ω–æ–µ –ø–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ')*!/*/}
                    {/*    /!*                        );*!/*/}
                    {/*    /!*                    }*!/*/}
                    {/*    /!*                }}*!/*/}
                    {/*    /!*            />*!/*/}
                    {/*    /!*            <FormControlLabel*!/*/}
                    {/*    /!*                control={<Checkbox color={'default'}/>}*!/*/}
                    {/*    /!*                label="–ë–µ–ª–æ–µ —Å—É—Ö–æ–µ –≤–∏–Ω–æ"*!/*/}
                    {/*    /!*                value="–ë–µ–ª–æ–µ —Å—É—Ö–æ–µ –≤–∏–Ω–æ"*!/*/}
                    {/*    /!*                onChange={(event: any) => {*!/*/}
                    {/*    /!*                    const isChecked = event.target.checked;*!/*/}
                    {/*    /!*                    if (typeof formik.values.alcoholPreferences !== 'string') {*!/*/}
                    {/*    /!*                        formik.setFieldValue(*!/*/}
                    {/*    /!*                            'alcoholPreferences',*!/*/}
                    {/*    /!*                            isChecked*!/*/}
                    {/*    /!*                                ? [...formik.values.alcoholPreferences, '–ë–µ–ª–æ–µ —Å—É—Ö–æ–µ –≤–∏–Ω–æ']*!/*/}
                    {/*    /!*                                : formik.values.alcoholPreferences.filter((preference) => preference !== '–ë–µ–ª–æ–µ —Å—É—Ö–æ–µ –≤–∏–Ω–æ')*!/*/}
                    {/*    /!*                        );*!/*/}
                    {/*    /!*                    }*!/*/}
                    {/*    /!*                }}*!/*/}
                    {/*    /!*            />*!/*/}
                    {/*    /!*            <FormControlLabel*!/*/}
                    {/*    /!*                control={<Checkbox color={'default'}/>}*!/*/}
                    {/*    /!*                label="–ë–µ–ª–æ–µ –ø–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ"*!/*/}
                    {/*    /!*                value="–ë–µ–ª–æ–µ –ø–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ"*!/*/}
                    {/*    /!*                onChange={(event: any) => {*!/*/}
                    {/*    /!*                    const isChecked = event.target.checked;*!/*/}
                    {/*    /!*                    if (typeof formik.values.alcoholPreferences !== 'string') {*!/*/}
                    {/*    /!*                        formik.setFieldValue(*!/*/}
                    {/*    /!*                            'alcoholPreferences',*!/*/}
                    {/*    /!*                            isChecked*!/*/}
                    {/*    /!*                                ? [...formik.values.alcoholPreferences, '–ë–µ–ª–æ–µ –ø–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ']*!/*/}
                    {/*    /!*                                : formik.values.alcoholPreferences.filter((preference) => preference !== '–ë–µ–ª–æ–µ –ø–æ–ª—É—Å–ª–∞–¥–∫–æ–µ –≤–∏–Ω–æ')*!/*/}
                    {/*    /!*                        );*!/*/}
                    {/*    /!*                    }*!/*/}
                    {/*    /!*                }}*!/*/}
                    {/*    /!*            />*!/*/}
                    {/*    /!*            <FormControlLabel*!/*/}
                    {/*    /!*                control={<Checkbox color={'default'}/>}*!/*/}
                    {/*    /!*                label="–®–∞–º–ø–∞–Ω—Å–∫–æ–µ"*!/*/}
                    {/*    /!*                value="–®–∞–º–ø–∞–Ω—Å–∫–æ–µ"*!/*/}
                    {/*    /!*                onChange={(event: any) => {*!/*/}
                    {/*    /!*                    const isChecked = event.target.checked;*!/*/}
                    {/*    /!*                    if (typeof formik.values.alcoholPreferences !== 'string') {*!/*/}
                    {/*    /!*                        formik.setFieldValue(*!/*/}
                    {/*    /!*                            'alcoholPreferences',*!/*/}
                    {/*    /!*                            isChecked*!/*/}
                    {/*    /!*                                ? [...formik.values.alcoholPreferences, '–®–∞–º–ø–∞–Ω—Å–∫–æ–µ']*!/*/}
                    {/*    /!*                                : formik.values.alcoholPreferences.filter((preference) => preference !== '–®–∞–º–ø–∞–Ω—Å–∫–æ–µ')*!/*/}
                    {/*    /!*                        );*!/*/}
                    {/*    /!*                    }*!/*/}
                    {/*    /!*                }}*!/*/}
                    {/*    /!*            />*!/*/}
                    {/*    /!*            <FormControlLabel*!/*/}
                    {/*    /!*                control={<Checkbox color={'default'}/>}*!/*/}
                    {/*    /!*                label="–ö–æ–Ω—å—è–∫"*!/*/}
                    {/*    /!*                value="–ö–æ–Ω—å—è–∫"*!/*/}
                    {/*    /!*                onChange={(event: any) => {*!/*/}
                    {/*    /!*                    const isChecked = event.target.checked;*!/*/}
                    {/*    /!*                    if (typeof formik.values.alcoholPreferences !== 'string') {*!/*/}
                    {/*    /!*                        formik.setFieldValue(*!/*/}
                    {/*    /!*                            'alcoholPreferences',*!/*/}
                    {/*    /!*                            isChecked*!/*/}
                    {/*    /!*                                ? [...formik.values.alcoholPreferences, '–ö–æ–Ω—å—è–∫']*!/*/}
                    {/*    /!*                                : formik.values.alcoholPreferences.filter((preference) => preference !== '–ö–æ–Ω—å—è–∫')*!/*/}
                    {/*    /!*                        );*!/*/}
                    {/*    /!*                    }*!/*/}
                    {/*    /!*                }}*!/*/}
                    {/*    /!*            />*!/*/}
                    {/*    /!*            <FormControlLabel*!/*/}
                    {/*    /!*                control={<Checkbox color={'default'}/>}*!/*/}
                    {/*    /!*                label="–í–æ–¥–∫–∞"*!/*/}
                    {/*    /!*                value="–í–æ–¥–∫–∞"*!/*/}
                    {/*    /!*                onChange={(event: any) => {*!/*/}
                    {/*    /!*                    const isChecked = event.target.checked;*!/*/}
                    {/*    /!*                    if (typeof formik.values.alcoholPreferences !== 'string') {*!/*/}
                    {/*    /!*                        formik.setFieldValue(*!/*/}
                    {/*    /!*                            'alcoholPreferences',*!/*/}
                    {/*    /!*                            isChecked*!/*/}
                    {/*    /!*                                ? [...formik.values.alcoholPreferences, '–í–æ–¥–∫–∞']*!/*/}
                    {/*    /!*                                : formik.values.alcoholPreferences.filter((preference) => preference !== '–í–æ–¥–∫–∞')*!/*/}
                    {/*    /!*                        );*!/*/}
                    {/*    /!*                    }*!/*/}
                    {/*    /!*                }}*!/*/}
                    {/*    /!*            />*!/*/}
                    {/*    /!*            <FormControlLabel*!/*/}
                    {/*    /!*                control={<Checkbox color={'default'}/>}*!/*/}
                    {/*    /!*                label="–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏"*!/*/}
                    {/*    /!*                value="–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏"*!/*/}
                    {/*    /!*                onChange={(event: any) => {*!/*/}
                    {/*    /!*                    const isChecked = event.target.checked;*!/*/}
                    {/*    /!*                    if (typeof formik.values.alcoholPreferences !== 'string') {*!/*/}
                    {/*    /!*                        formik.setFieldValue(*!/*/}
                    {/*    /!*                            'alcoholPreferences',*!/*/}
                    {/*    /!*                            isChecked*!/*/}
                    {/*    /!*                                ? [...formik.values.alcoholPreferences, '–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏']*!/*/}
                    {/*    /!*                                : formik.values.alcoholPreferences.filter((preference) => preference !== '–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏')*!/*/}
                    {/*    /!*                        );*!/*/}
                    {/*    /!*                    }*!/*/}
                    {/*    /!*                }}*!/*/}
                    {/*    /!*            />*!/*/}
                    {/*    /!*        </FormGroup>*!/*/}
                    {/*    /!*    </FormControl>*!/*/}
                    {/*    /!*</div>*!/*/}
                    {/*    /!*<div>*!/*/}
                    {/*    /!*    <TextField*!/*/}
                    {/*    /!*        style={{width: '100%'}}*!/*/}
                    {/*    /!*        variant="standard"*!/*/}
                    {/*    /!*        className="form-control"*!/*/}
                    {/*    /!*        id="music"*!/*/}
                    {/*    /!*        placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–∏–º–æ–≥–æ —Ç—Ä–µ–∫–∞"*!/*/}
                    {/*    /!*        label="–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –ª—é–±–∏–º—ã–π —Ç—Ä–µ–∫:"*!/*/}
                    {/*    /!*        type="text"*!/*/}
                    {/*    /!*        {...formik.getFieldProps('music')}*!/*/}
                    {/*    /!*        error={formik.touched.music && Boolean(formik.errors.music)}*!/*/}
                    {/*    /!*        helperText={formik.touched.music && formik.errors.music}*!/*/}
                    {/*    /!*    />*!/*/}
                    {/*    /!*</div>*!/*/}
                    {/*</div>*/}
                    <div>
                        <button className={s.button} type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å!</button>
                    </div>
                </form>
            </div>
        </div>
    );
};